name: auto-deploy-server

on: 
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
#    -
#      name: Checkout
#      uses: actions/checkout@v3
#    -
#      shell: bash
#      env:
#        CLOUD_STORAGE: ${{ secrets.CLOUD_STORAGE }}
#      run: |
#          echo "$CLOUD_STORAGE" > storagecredential.json
#    -
#      name: Login to Docker Hub
#      uses: docker/login-action@v2
#      with:
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
#    -
#      name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v2
#    -
#      name: Build and push
#      uses: docker/build-push-action@v4
#      with:
#        context: .
#        file: ./Dockerfile
#        push: true
#        tags: ${{ secrets.DOCKERHUB_USERNAME }}/tailoring-python:latest

    - name: Check ping
      run: |
         ping -c 5 ${{ secrets.HOST }}
    
    - name: multiple command
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          echo "Nice Job!!!"
   #       docker stop ${{ secrets.CNAME }}
   #       docker rm ${{ secrets.CNAME }}
   #       docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/tailoring-python:latest
   #       docker pull ${{ secrets.DOCKERHUB_USERNAME }}/tailoring-python:latest
   #       docker run -d -p 80:8000 -e APP_ENV=dev -e DBUSER=${{ secrets.DBUSER }} -e DBPASSWORD=${{ secrets.DBPASSWORD }} -e DBHOST=${{ secrets.DBHOST }} -e DBPORT=${{ secrets.DBPORT }} -e DBNAME=${{ secrets.DBNAME }} -e JWT=${{ secrets.JWT }} -e GCP_CREDENTIAL=${{ secrets.GCP_CREDENTIAL }} -e GCP_PROJECTID=${{ secrets.GCP_PROJECTID }} -e GCP_BUCKETNAME=${{ secrets.GCP_BUCKETNAME }} -e GCP_PATH=${{ secrets.GCP_PATH }} --name ${{ secrets.CNAME }} ${{ secrets.DOCKERHUB_USERNAME }}/tailoring-python:latest
        
